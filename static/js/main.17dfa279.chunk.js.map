{"version":3,"sources":["TodoForm.js","TodoList.js","App.js","reportWebVitals.js","Redux/reducer.js","Redux/store.js","index.js"],"names":["TodoForm","input","addTodo","className","style","display","ref","node","width","onClick","value","Todo","todo","remove","cursor","id","text","connect","props","dispatch","type","payload","todoNode","todos","map","state","count","_","val","Math","random","toString","alert","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducer","action","filter","t","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOA4BeA,MA1Bf,YAAgC,IAE1BC,EAFcC,EAAW,EAAXA,QAIlB,OACE,sBAAKC,UAAU,aAAaC,MAAO,CAAEC,QAAS,QAA9C,UACE,uBACEC,IAAK,SAACC,GACJN,EAAQM,GAEVJ,UAAU,iBAEZ,wBACEA,UAAU,kBACVC,MAAO,CAAEI,MAAO,OAChBC,QAAS,WACPP,EAAQD,EAAMS,OACdT,EAAMS,MAAQ,IALlB,mBCEN,IAAMC,EAAO,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACpB,OACE,oBAAIT,MAAO,CAAEU,OAAQ,WAAaL,QAAS,kBAAMI,EAAOD,EAAKG,KAA7D,SACGH,EAAKI,QAKGC,iBArBf,SAAkBC,GAChB,IAAML,EAAS,SAACE,GACdG,EAAMC,SAAS,CACbC,KAAM,SACNC,QAASN,KAGPO,EAAWJ,EAAMK,MAAMC,KAAI,SAACZ,GAChC,OAAO,cAAC,EAAD,CAAMA,KAAMA,EAAoBC,OAAQA,GAAjBD,EAAKG,OAErC,OAAO,6BAAKO,OCgDd,IAOeL,eAPS,SAACQ,GACvB,MAAO,CACLC,MAAOD,EAAMC,MACbd,KAAMa,EAAMb,QAIwB,KAAzBK,EA/Df,SAAaC,GA+BX,OACE,sBAAKf,UAAU,iBAAf,UACE,gCACE,yCACA,sBAAKA,UAAU,MAAf,UACE,wBACEA,UAAU,2BACVM,QAhCc,SAACkB,GACvBT,EAAMC,SAAS,CACbC,KAAM,eA4BF,eAMA,sBAAMjB,UAAU,gBAAhB,SAAiCe,EAAMQ,QACvC,wBAAQvB,UAAU,wBAAwBM,QA1C1B,WACtBS,EAAMC,SAAS,CACbC,KAAM,eAwCF,qBAKJ,sBAAKhB,MAAO,CAAEI,MAAO,OAArB,UACE,0CACA,cAAC,EAAD,CAAUN,QAtCA,SAAC0B,GACJ,IAAPA,EAIJV,EAAMC,SAAS,CACbC,KAAM,UACNC,QAAS,CAAEL,KAAMY,EAAKb,GAAIc,KAAKC,SAASC,SAAS,MALjDC,MAAM,iBAqCJ,cAAC,EAAD,CAAUT,MAAOL,EAAMN,gBC5ChBqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,qBCPRQ,EAAe,CACnBhB,MAAO,EACPd,KAAM,IA8BO+B,EA3BC,WAAmC,IAAlClB,EAAiC,uDAAzBiB,EAAcE,EAAW,uCAChD,OAAQA,EAAOxB,MACb,IAAK,YAGH,OAFAK,EAAK,eAAQA,IACR,OAAa,EACXA,EAET,IAAK,YAGH,OAFAA,EAAK,eAAQA,IACR,OAAa,EACXA,EAET,IAAK,UAGH,OAFAA,EAAK,eAAQA,IACR,KAAL,sBAAoBA,EAAMb,MAA1B,CAAgCgC,EAAOvB,UAChCI,EAET,IAAK,SAGH,OAFAA,EAAK,eAAQA,IACR,KAAWA,EAAMb,KAAKiC,QAAO,SAACC,GAAD,OAAOA,EAAE/B,IAAM6B,EAAOvB,WACjDI,EAET,QACE,OAAOA,ICvBEsB,EAFDC,YAAYL,GCK1BM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJK,SAASC,eAAe,SAM1BpB,M","file":"static/js/main.17dfa279.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction TodoForm({ addTodo }) {\n  // Input tracker\n  let input;\n\n  return (\n    <div className=\"form-group\" style={{ display: \"flex\" }}>\n      <input\n        ref={(node) => {\n          input = node;\n        }}\n        className=\"form-control\"\n      />\n      <button\n        className=\"btn btn-success\"\n        style={{ width: \"10%\" }}\n        onClick={() => {\n          addTodo(input.value);\n          input.value = \"\";\n        }}\n      >\n        +\n      </button>\n    </div>\n  );\n}\n\nexport default TodoForm;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nfunction TodoList(props) {\n  const remove = (id) => {\n    props.dispatch({\n      type: \"REMOVE\",\n      payload: id,\n    });\n  };\n  const todoNode = props.todos.map((todo) => {\n    return <Todo todo={todo} key={todo.id} remove={remove} />;\n  });\n  return <ul>{todoNode}</ul>;\n}\n\nconst Todo = ({ todo, remove }) => {\n  return (\n    <li style={{ cursor: \"pointer\" }} onClick={() => remove(todo.id)}>\n      {todo.text}\n    </li>\n  );\n};\n\nexport default connect()(TodoList);\n","import \"./App.css\";\nimport { connect } from \"react-redux\";\nimport TodoForm from \"./TodoForm\";\nimport TodoList from \"./TodoList\";\n\nfunction App(props) {\n  const incrementHandle = () => {\n    props.dispatch({\n      type: \"INCREMENT\",\n    });\n  };\n  const decrementHandle = (_) => {\n    props.dispatch({\n      type: \"DECREMENT\",\n    });\n  };\n\n  const addTodo = (val) => {\n    if (val == \"\") {\n      alert(\"Enter task\");\n      return;\n    }\n    props.dispatch({\n      type: \"ADDTODO\",\n      payload: { text: val, id: Math.random().toString(5) },\n    });\n  };\n\n  // const style = {\n  //   display: \"flex\",\n  //   justifyContent: \"space-between\",\n  //   flexDirection: \"row\",\n  //   margin: \"auto\",\n  //   padding: \"21%\",\n  // };\n\n  return (\n    <div className=\"App App-header\">\n      <div>\n        <h2>Counter</h2>\n        <div className=\"row\">\n          <button\n            className=\"btn btn-warning col-md-4\"\n            onClick={decrementHandle}\n          >\n            -\n          </button>\n          <span className=\"btn  col-md-4\">{props.count}</span>\n          <button className=\"btn btn-info col-md-4\" onClick={incrementHandle}>\n            +\n          </button>\n        </div>\n      </div>\n      <div style={{ width: \"50%\" }}>\n        <h2>TODO App</h2>\n        <TodoForm addTodo={addTodo} />\n        <TodoList todos={props.todo} />\n      </div>\n    </div>\n  );\n}\nconst mapStateToProps = (state) => {\n  return {\n    count: state.count,\n    todo: state.todo,\n  };\n};\n\nexport default connect(mapStateToProps, null)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\n  count: 0,\n  todo: [],\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"INCREMENT\": {\n      state = { ...state };\n      state[\"count\"] += 1;\n      return state;\n    }\n    case \"DECREMENT\": {\n      state = { ...state };\n      state[\"count\"] -= 1;\n      return state;\n    }\n    case \"ADDTODO\": {\n      state = { ...state };\n      state[\"todo\"] = [...state.todo, action.payload];\n      return state;\n    }\n    case \"REMOVE\": {\n      state = { ...state };\n      state[\"todo\"] = state.todo.filter((t) => t.id != action.payload);\n      return state;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { createStore } from \"redux\";\nimport reducer from \"./reducer\";\n\nconst store = createStore(reducer);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./Redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}